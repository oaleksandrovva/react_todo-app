{"version":3,"sources":["components/TodoForm/TodoForm.jsx","components/TodoItem/TodoItem.jsx","TodosContext.jsx","hooks/LocalStorage.js","components/TodoList/TodoList.jsx","components/TodoFilter/TodoFilter.jsx","TodoApp.js","index.js"],"names":["TodoForm","React","memo","onAddNewTodo","useState","id","Date","title","completed","newTodo","setNewTodo","onSubmit","clickEvent","preventDefault","type","className","placeholder","value","onChange","handleEvent","target","previousTodo","TodoItem","key","TodosContext","createContext","todos","setTodos","TodosProvider","children","initialValue","JSON","parse","localStorage","getItem","setValue","newValue","setItem","stringify","useLocalStorage","contextValue","useMemo","Provider","TodoList","useContext","some","todo","map","htmlFor","reverse","TodoFilter","href","TodoApp","addNewTodo","useCallback","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5accd329.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nexport const TodoForm = React.memo(({ onAddNewTodo }) => {\n  const [newTodo, setNewTodo] = useState({\n    id: +new Date(),\n    title: '',\n    completed: false,\n  });\n\n  const handleSubmit = (clickEvent) => {\n    clickEvent.preventDefault();\n\n    onAddNewTodo(newTodo);\n\n    setNewTodo({\n      id: +new Date(),\n      title: '',\n      completed: false,\n    });\n  };\n\n  const handleChangeInput = (handleEvent) => {\n    const { value } = handleEvent.target;\n\n    setNewTodo(previousTodo => ({\n      ...previousTodo,\n      title: value,\n    }));\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n        className=\"new-todo\"\n        placeholder=\"What needs to be done?\"\n        value={newTodo.title}\n        onChange={handleChangeInput}\n      />\n    </form>\n  );\n});\n\nTodoForm.propTypes = {\n  onAddNewTodo: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const TodoItem = ({ id, title, completed }) => (\n  <li key={id} className={`${completed ? 'completed' : ''}`}>\n    <div className=\"view\">\n      <input type=\"checkbox\" className=\"toggle\" />\n      <label>{title}</label>\n      <button type=\"button\" className=\"destroy\" />\n    </div>\n    <input type=\"text\" className=\"edit\" />\n  </li>\n);\n\nTodoItem.propTypes = {\n  id: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  completed: PropTypes.bool.isRequired,\n};\n","import React, { useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport { useLocalStorage } from './hooks/LocalStorage';\n\nexport const TodosContext = React.createContext({\n  todos: [],\n  setTodos: () => { },\n});\n\nexport const TodosProvider = ({ children }) => {\n  const [todos, setTodos] = useLocalStorage('todos', []);\n\n  const contextValue = useMemo(() => ({\n    todos,\n    setTodos,\n  }), [todos]);\n\n  return (\n    <TodosContext.Provider value={contextValue}>\n      {children}\n    </TodosContext.Provider>\n  );\n};\n\nTodosProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n","import { useState } from 'react';\n\nexport const useLocalStorage = (key, initialValue) => {\n  const [value, setValue] = useState(() => {\n    try {\n      return JSON.parse(localStorage.getItem(key)) || initialValue;\n    } catch {\n      return initialValue;\n    }\n  });\n\n  const saveInLocalStorage = (newValue) => {\n    setValue(newValue);\n    localStorage.setItem(key, JSON.stringify(newValue));\n  };\n\n  return [value, saveInLocalStorage];\n};\n","import React, { useContext } from 'react';\nimport { TodoItem } from '../TodoItem';\nimport { TodosContext } from '../../TodosContext';\n\nexport const TodoList = () => {\n  const { todos, setTodos } = useContext(TodosContext);\n\n  const handleToggleAll = () => (\n    (todos.some(todo => !todo.completed))\n      ? setTodos(todos.map(todo => ({\n        ...todo,\n        completed: true,\n      })))\n      : setTodos(todos.map(todo => ({\n        ...todo,\n        completed: false,\n      })))\n  );\n\n  return (\n    <>\n      <input\n        type=\"checkbox\"\n        id=\"toggle-all\"\n        className=\"toggle-all\"\n        onChange={handleToggleAll}\n      />\n      {todos && (\n        <label htmlFor=\"toggle-all\">Mark all as complete</label>\n      )}\n\n      <ul className=\"todo-list\">\n        {todos && todos.map(({ id, title, completed }) => (\n          <TodoItem\n            key={id}\n            id={id}\n            title={title}\n            completed={completed}\n          />\n        )).reverse()}\n      </ul>\n    </>\n  );\n};\n","import React from 'react';\n\nexport const TodoFilter = () => (\n  <>\n    <span className=\"todo-count\">\n      3 items left\n    </span>\n\n    <ul className=\"filters\">\n      <li>\n        <a href=\"#/\" className=\"selected\">All</a>\n      </li>\n\n      <li>\n        <a href=\"#/active\">Active</a>\n      </li>\n\n      <li>\n        <a href=\"#/completed\">Completed</a>\n      </li>\n    </ul>\n\n    <button type=\"button\" className=\"clear-completed\">\n      Clear completed\n    </button>\n  </>\n);\n","import React, { useContext, useCallback } from 'react';\nimport { TodoForm } from './components/TodoForm';\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\n\nimport { TodosContext } from './TodosContext';\n\nfunction TodoApp() {\n  const { todos, setTodos } = useContext(TodosContext);\n\n  const addNewTodo = useCallback((newTodo) => {\n    setTodos([...todos, newTodo]);\n  }, [todos]);\n\n  return (\n    <section className=\"todoapp\">\n      <header className=\"header\">\n        <h1>todos App</h1>\n\n        <TodoForm onAddNewTodo={addNewTodo} />\n      </header>\n\n      <section className=\"main\">\n        {todos && (\n          <TodoList />\n        )}\n      </section>\n\n      <footer className=\"footer\">\n        <TodoFilter />\n      </footer>\n    </section>\n  );\n}\n\nexport default TodoApp;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './styles/index.css';\nimport './styles/todo-list.css';\nimport './styles/filters.css';\n\nimport TodoApp from './TodoApp';\nimport { TodosProvider } from './TodosContext';\n\nReactDOM.render(\n  <TodosProvider>\n    <TodoApp />\n  </TodosProvider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}